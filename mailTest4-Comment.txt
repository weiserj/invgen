From: <johann.weiser@aon.at>
To: "Weiser, Paul" <weiserjpaul@gmail.com>
Subject: Tests mit 	IMAP4 funktionieren perfekt!!!
Date: Fri, 29 Nov 2024 00:15:51 +0100
Message-ID: <003c01db41eb$7a91d820$6fb58860$@aon.at>
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_003D_01DB41F3.DC564020"
X-Mailer: Microsoft Outlook 16.0
Thread-Index: AQFN7ecYt9kDRShTFHFvc6wgEUj3YA==
Content-Language: de-at
X-OlkEid: 00000000EFE4F0E5358AB8449A34A89BE1554D360700C3B68E10F77511CEB4CD00AA00BBB6E600000000000E0000FF91F1E45C63C6459655EF7E62C66EF70000000009EC0000BEC148AFBB6D614A8D99EC6D67F1B8D8

This is a multipart message in MIME format.

------=_NextPart_000_003D_01DB41F3.DC564020
Content-Type: multipart/alternative;
	boundary="----=_NextPart_001_003E_01DB41F3.DC564020"


------=_NextPart_001_003E_01DB41F3.DC564020
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 8bit

Hallo Paul!

Ich bin da beim Mail-Schreiben mittels Python vollzufrieden. Das
funktioniert mittlerweile perfekt.

Ichhabe da die letzten 2 Tage noch kleine Fehler ausgebessert:

Beim fetch-Kommando: Die Ausgabefelder der header-fields muss man danach
noch in Klammernschreiben (hier nur ein Feld namens subject, also
"(SUBJECT)" ).

Beim store-Kommando muss man die Flags auch in Klammern setzen, hier also:
"'(\\Drafts) <file://Drafts)> '". Beim append-Kommando ist das auch so
ähnlich.

Damit funktioniert jetzt mein Testprogramm. Ich bin jetzt voll zufrieden.



Das Senden mit smtp geht schon länger. Aber ich wollte, dass ich die
geplanten emails vor dem Senden noch etwas prüfen kann. Dies ist mir jetzt
gelungen. Die emails werden zwar beim mail Server gespeichert, aber
abschicken kann ich sie dann einfach selber. Nachdem das \drafts-Flag
funktioniert hat, ist nun alles okay.



Aus dem Beispiel habe ich das Passwort rausgenommen.



Wenn es dich irgendwann interessiert, kann ich es dir erklären.



               Pauli


------=_NextPart_001_003E_01DB41F3.DC564020
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<html xmlns:v=3D"urn:schemas-microsoft-com:vml" =
xmlns:o=3D"urn:schemas-microsoft-com:office:office" =
xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml" =
xmlns=3D"http://www.w3.org/TR/REC-html40"><head><meta =
http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1"><meta name=3DGenerator content=3D"Microsoft Word =
15 (filtered medium)"><style><!--
/* Font Definitions */
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:#0563C1;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-priority:99;
	color:#954F72;
	text-decoration:underline;}
span.E-MailFormatvorlage17
	{mso-style-type:personal-compose;
	font-family:"Calibri",sans-serif;
	color:windowtext;}
.MsoChpDefault
	{mso-style-type:export-only;
	font-family:"Calibri",sans-serif;
	mso-ligatures:standardcontextual;
	mso-fareast-language:EN-US;}
@page WordSection1
	{size:612.0pt 792.0pt;
	margin:70.85pt 70.85pt 2.0cm 70.85pt;}
div.WordSection1
	{page:WordSection1;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext=3D"edit" spidmax=3D"1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext=3D"edit">
<o:idmap v:ext=3D"edit" data=3D"1" />
</o:shapelayout></xml><![endif]--></head><body lang=3DDE-AT =
link=3D"#0563C1" vlink=3D"#954F72"><div class=3DWordSection1><p =
class=3DMsoNormal><span lang=3DDE>Hallo Paul!<o:p></o:p></span></p><p =
class=3DMsoNormal><span lang=3DDE>Ich bin da beim Mail-Schreiben mittels =
Python vollzufrieden. Das funktioniert mittlerweile =
perfekt.<o:p></o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE>Ichhabe da die letzten 2 Tage noch kleine Fehler =
ausgebessert:<o:p></o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE>Beim fetch-Kommando: Die Ausgabefelder der header-fields muss =
man danach noch in Klammernschreiben (hier nur ein Feld namens subject, =
also &quot;(SUBJECT)&quot; ).<o:p></o:p></span></p><p =
class=3DMsoNormal><span lang=3DDE>Beim store-Kommando muss man die Flags =
auch in Klammern setzen, hier also: &quot;'(<a =
href=3D"file://Drafts)">\\Drafts)</a>'&quot;. Beim append-Kommando ist =
das auch so =E4hnlich.<o:p></o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE>Damit funktioniert jetzt mein Testprogramm. Ich bin jetzt voll =
zufrieden.<o:p></o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE><o:p>&nbsp;</o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE>Das Senden mit smtp geht schon l=E4nger. Aber ich wollte, dass =
ich die geplanten emails vor dem Senden noch etwas pr=FCfen kann. Dies =
ist mir jetzt gelungen. Die emails werden zwar beim mail Server =
gespeichert, aber abschicken kann ich sie dann einfach selber. Nachdem =
das \drafts-Flag funktioniert hat, ist nun alles =
okay.<o:p></o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE><o:p>&nbsp;</o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE>Aus dem Beispiel habe ich das Passwort =
rausgenommen.<o:p></o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE><o:p>&nbsp;</o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE>Wenn es dich irgendwann interessiert, kann ich es dir =
erkl=E4ren.<o:p></o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE><o:p>&nbsp;</o:p></span></p><p class=3DMsoNormal><span =
lang=3DDE>=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 =
Pauli<o:p></o:p></span></p></div></body></html>
------=_NextPart_001_003E_01DB41F3.DC564020--

------=_NextPart_000_003D_01DB41F3.DC564020
Content-Type: text/x-python;
	name="mailTest4-Kopie.py"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="mailTest4-Kopie.py"

import imaplib=0A=
import imapclient=0A=
from email.message import EmailMessage=0A=
=0A=
# List der Mailboxen ermitteln=0A=
def listMailboxes(m):=0A=
    print("\nListe aller Mailboxen:")=0A=
    l =3D m.list()=0A=
    mailboxList =3D l[1]=0A=
    for l2 in mailboxList:=0A=
        print(l2)=0A=
    print("*** ENDE ***\n")=0A=
=0A=
def deleteMailboxes(m):=0A=
    """=0A=
    Wird im Moment nicht verwendet, da waren kleine Unklarheiten beim =
Mail-Server=0A=
    :type m: object=0A=
    """=0A=
    m.select("EEGs.Reidlinger")=0A=
    m.unsubscribe("EEGs.Reidlinger")=0A=
    m.delete(mailbox=3D"EEGs.Reidlinger")=0A=
    #m.unselect()=0A=
    m.select(mailbox=3D"Drafts.EEGs.Reidlinger")=0A=
    m.unsubscribe("Drafts.EEGs.Reidlinger")=0A=
    m.delete(mailbox=3D"Drafts.EEGs.Reidlinger")=0A=
    m.select(mailbox=3D"Drafts.EEGs")=0A=
    m.delete(mailbox=3D"Drafts.EEGs")=0A=
    pass=0A=
=0A=
=0A=
# Erzeugen einer Test-Email=0A=
def createMail(mailboxName):=0A=
    msg1 =3D EmailMessage()=0A=
    msg1['Subject'] =3D f'Hallo, hallo message 27.11, 10:57! Created for =
{mailboxName}'=0A=
    msg1['From'] =3D 'johann.weiser@aon.at'=0A=
    msg1['To'] =3D 'johannp.weiser@gmail.com, johann.weiser@aon.at'=0A=
=0A=
    msg1.set_content('Hi there,\n this is a test E-mail from =
Python!!!!!\n'=0A=
                     'bisher war date_time=3DNone, nun date_time=3D" " =
\n'=0A=
                     ' das funktioniert nicht, jetzt probiere ich =
date_time=3D""')=0A=
=0A=
    filename =3D 'reidlinger_markus.pdf'=0A=
    with open('./results/' + filename, 'rb') as content_file:=0A=
        content =3D content_file.read()=0A=
        msg1.add_attachment(content, maintype=3D'application/pdf', =
subtype=3D'pdf', filename=3Dfilename)=0A=
=0A=
    return msg1=0A=
    pass=0A=
=0A=
=0A=
# Erzeugen einer Mailbox und Einspielen einer Mail=0A=
def createMailbox(m):=0A=
    mailboxName=3D"Drafts.EEGs"=0A=
    # unklar, was a und b zur=C3=BCckliefern=0A=
    a =3D m.create(mailboxName) # bringt nichts!!!=0A=
    b =3D m.subscribe(mailboxName)=0A=
    print(a,b)=0A=
    listMailboxes(m)=0A=
    # Liste der subscribed Mailboxe=0A=
    x =3D m.lsub()=0A=
=0A=
    # select mailbox=0A=
    y=3Dm.select(mailbox=3DmailboxName)=0A=
=0A=
    # hier wird die Mail erzeugt=0A=
    ms =3D createMail()=0A=
=0A=
    # undhier wird sie in die Mailbox eingespielt=0A=
    x =3D m.append(mailbox=3DmailboxName, flags =3D"", date_time=3D"", =
message=3Dms.as_bytes() )=0A=
    # m.append(mailbox=3D"Drafts", flags=3D"\\Drafts", date_time=3DNone, =
message=3Dms.as_bytes())=0A=
    pass=0A=
=0A=
=0A=
def registerMail(m, mailboxName):=0A=
    b =3D m.subscribe(mailboxName)=0A=
    y =3D m.select(mailbox=3DmailboxName)=0A=
    ms =3D createMail(mailboxName) # Der Mailboxnamewird im Subject =
hinzugef=C3=BCgt!!=0A=
    x =3D m.append(mailbox=3DmailboxName, flags =3D"(\\Draft)", =
date_time=3D"", message=3Dms.as_bytes() )=0A=
    #x =3D m.append(mailbox=3DmailboxName, flags=3DNone, date_time=3D"", =
message=3Dms.as_bytes() )=0A=
    z=3Dm.status(mailboxName, "(MESSAGES UIDVALIDITY UIDNEXT)")=0A=
    x =3D m.list(mailboxName)=0A=
    print(x)=0A=
    print(z)=0A=
    # nun wird versucht das \\Draft Flag zu setzen=0A=
    # das geht auch nicht!!=0A=
    #u =3D m.store(1, '+FLAGS', '\\Drafts')=0A=
    pass=0A=
=0A=
=0A=
def setDraftFlag(m, mailboxName):=0A=
    y =3D m.select(mailbox=3DmailboxName)=0A=
    u =3D m.store('1', '+FLAGS', '(\\Drafts)')=0A=
    pass=0A=
=0A=
=0A=
def listSingleMailbox(m, mailbox):=0A=
    m.list(mailbox)=0A=
    m.select(mailbox)=0A=
    print(f'\nListing of Mailbox "{mailbox}":')=0A=
    x =3D m.fetch('1:*', "(UID INTERNALDATE FLAGS BODY[HEADER.fields =
(subject)])")=0A=
    for y in x[1]:=0A=
        print(y)=0A=
=0A=
# begin of main method=0A=
M=3Dimaplib.IMAP4("securemail.a1.net")=0A=
M.login('johann.weiser@aon.at', 'password')=0A=
# x =3D M.select()=0A=
# y =3D M.select(mailbox=3D"github")=0A=
=0A=
# das ist so ein kleines L=C3=B6schprogramm!=0A=
# es leibt nur das List-Programm, das delete wird Kommentar!!=0A=
listMailboxes(M)=0A=
# deleteMailboxes(M)=0A=
# jetzt wirdangenommen, dass die mailbox schon eingerichtet ist!!=0A=
# createMailbox(M)=0A=
M.list("EEGs")=0A=
M.select("EEGs")=0A=
#M.fetch("(0:3, 4:*)", "(RFC822.HEADER, FLAGS INTERNALDATE)")=0A=
=0A=
# 1:* geht nicht, wenndie mailbox leer ist=0A=
#x=3DM.fetch("1:*", "(RFC822.HEADER FLAGS INTERNALDATE uid)")=0A=
# die folgende Zeile funktiert!!!!=0A=
=0A=
# 1:* geht nicht, wenndie mailbox leer ist=0A=
#M.fetch('1:*', "(UID INTERNALDATE BODY[HEADER])")=0A=
# das passt jetzt auch!!!=0A=
=0A=
# 1:* geht nicht, wenndie mailbox leer ist=0A=
#x=3DM.fetch('1:*', "(UID INTERNALDATE BODY[HEADER.fields (subject)])")=0A=
=0A=
#for y in x[1]:=0A=
#    print(y)=0A=
pass=0A=
=0A=
registerMail(M, "EEGs") # da gehts nicht mit Drafts Flag=0A=
registerMail(M, "Drafts.EEGs")=0A=
# hier im \\Drafts Ordner sollte es gehen=0A=
registerMail(M, "Drafts")=0A=
=0A=
listSingleMailbox(M, "Drafts")=0A=
#imaplib.IMAP4.debug=3D4=0A=
#setDraftFlag(M, "EEGs")=0A=
=0A=
# Schlie=C3=9Ft die im Moment ausgew=C3=B6hlte (selected) Mailbox=0A=
# close ist erlaubt, wenn eine mailbox selektiert ist!=0A=
M.close()=0A=
M.logout()
------=_NextPart_000_003D_01DB41F3.DC564020--
